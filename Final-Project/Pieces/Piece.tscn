[gd_scene load_steps=15 format=2]

[ext_resource path="res://Pieces/Piece.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://Assets/star.png" type="Texture" id=3]
[ext_resource path="res://Assets/white_dragon.png" type="Texture" id=4]

[sub_resource type="Shader" id=9]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/teleport-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float progress : hint_range(0.0, 1.0);
uniform float noise_desnity = 60;
uniform float beam_size : hint_range(0.01, 0.15);
uniform vec4 color : hint_color = vec4(0.0, 1.02, 1.2, 1.0);

// We are generating our own noise here. You could experiment with the 
// built in SimplexNoise or your own noise texture for other effects.
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

void fragment()
{
	vec4 tex = texture(TEXTURE, UV);
	
	float noise = noise(UV * noise_desnity) * UV.y;
	
	float d1 = step(progress, noise);
	float d2 = step(progress - beam_size, noise);
	
	vec3 beam = vec3(d2 - d1) * color.rgb;
	
	tex.rgb += beam;
	tex.a *= d2;
	
	COLOR = tex;
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/progress = null
shader_param/noise_desnity = 60.0
shader_param/beam_size = null
shader_param/color = Color( 0, 1.02, 1.2, 1 )

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0.3, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="Curve" id=3]
min_value = -1.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, -1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=4]
curve = SubResource( 3 )

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.494845, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.997423, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=6]
curve = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
emission_shape = 2
emission_box_extents = Vector3( 68, 68, 0 )
flag_disable_z = true
direction = Vector3( 0, 0, 0 )
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 200.0
initial_velocity_random = 1.0
orbit_velocity = 0.5
orbit_velocity_random = 1.0
linear_accel = -0.2
scale = 0.1
scale_curve = SubResource( 6 )
color_ramp = SubResource( 2 )
hue_variation = 1.0
hue_variation_random = 1.0
hue_variation_curve = SubResource( 4 )

[sub_resource type="CanvasItemMaterial" id=8]
blend_mode = 1

[node name="Piece" type="Node2D"]
scale = Vector2( 0.75, 0.75 )
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 10 )
texture = ExtResource( 2 )

[node name="Selected" type="Particles2D" parent="."]
emitting = false
amount = 20
lifetime = 0.5
process_material = SubResource( 7 )
texture = ExtResource( 3 )

[node name="Select" type="Sprite" parent="."]
visible = false
modulate = Color( 1, 0.866667, 0, 0.658824 )
material = SubResource( 8 )
scale = Vector2( 0.08, 0.08 )
texture = ExtResource( 4 )

[node name="Tween" type="Tween" parent="."]

[node name="Moving" type="Tween" parent="."]
